#./nginx/nginx.conf 

# user nginx; 
# worker_processes 1; 

# error_log /var/log/nginx/error.log warn; 
# pid /var/run/nginx.pid; 
# events { 
# 	worker_connections 1024; 
# } 
# http { 
# 	include /etc/nginx/mime.types; 
# 	default_type application/octet-stream; 
# 	log_format main '$remote_addr - $remote_user [$time_local] "$request" ' '$status $body_bytes_sent "$http_referer" ' '"$http_user_agent" "$http_x_forwarded_for"'; 
# 	access_log /var/log/nginx/access.log main; 
# 	sendfile on; 
# 	#tcp_nopush on; 
# 	keepalive_timeout 65; 
# 	#gzip on; 
# 	include /etc/nginx/conf.d/*.conf; 

# 	# HTTPS
# 	ssl_session_cache shared:SSL:10m;
# 	ssl_session_timeout 24h;
# 	ssl_session_tickets off;
# 	ssl_prefer_server_ciphers on;
# 	ssl_protocols TLSv1.2;
# 	ssl_ciphers EECDH+CHACHA20:EECDH+AES;
# 	ssl_ecdh_curve X25519:prime256v1:secp521r1:secp384r1;

# 	ssl_certificate /etc/letsencrypt/live/dev.hellotome.shop/fullchain.pem;
# 	ssl_certificate_key /etc/letsencrypt/live/dev.hellotome.shop/privkey.pem;
# }


user nginx nginx;

events {
}

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile      on;

  keepalive_timeout 300s;

  # HTTPS
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 24h;
  ssl_session_tickets off;
  ssl_prefer_server_ciphers on;
  ssl_protocols TLSv1.2;
  ssl_ciphers EECDH+CHACHA20:EECDH+AES;
  ssl_ecdh_curve X25519:prime256v1:secp521r1:secp384r1;

  ssl_certificate /etc/letsencrypt/live/dev.hellotome.shop/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/dev.hellotome.shop/privkey.pem;


# Redirect HTTP non-www to HTTPS non-www
  server {
    listen 80;

    server_name dev.hellotome.shop;

    return 301 https://dev.hellotome.shop$request_uri;
  }

  # Main domain
  server {
    listen 443 ssl http2 default_server;

    server_name dev.hellotome.shop;

    # Serve create react app build

    location /user { 
        proxy_pass http://my-node-user:8000; 
    } 
    location /manager { 
        proxy_pass http://my-node-manager:8001; 
    } 

    # Certbot
    location /.well-known/ {
      root /var/lib/certbot;
    }
  }
}